[workspace]
members = [
    "baseui",
    "pubsub",
    "graphics",
    "common",
    "simulator",
    "slam",
]
default-members = ["baseui"]
resolver = "2"


[workspace.dependencies]
pubsub = {path = "./pubsub"}
graphics = {path = "./graphics"}
common = {path = "./common"}
neato = {path = "./neato"}
simulator = {path = "./simulator"}
slam = {path = "./slam"}

# we only depend on `egui` since it exports the versions of
# `eframe` and `glow` that we need.
eframe = { version = "0.25.0", default-features = false, features = [
    #"accesskit",     # Make egui comptaible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    # "persistence",   # Enable restoring app state when restarting the app.
] }

nalgebra = {version = "0.32.4", features = ["serde-serialize"] }
anyhow = "1.0.80"
log = "0.4"

serde = { version = "1.0", features = ["derive"] }
serde_yaml = "0.9"

rand = "0.8.5"
statrs = "0.16.0"

web-time = "1.0.0" # for using time::instant on wasm

# for instrumented logging capabilities
tracing = "0.1"
#tracing-subscriber = "0.3"

# for communication with the robot
bincode = {version = "2.0.0-rc.3" , git="https://github.com/bincode-org/bincode",rev = "aada4bb4cb457677a4b8e47572ae7ca8dd44927c"}
slamrs-message = { path = '../slamrs-message'}

# [profile.release]
# opt-level = 2 # fast and small wasm

[profile.release]
debug = true

# slam crate needs serious optimization to work in debug builds (apparently this is not caught by the all-package options below...)
[profile.dev.package.slam]
opt-level = 3

[profile.dev.package.graphics]
opt-level = 3

[profile.dev.package.pubsub]
opt-level = 3

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 3


[profile.dev]
# Turn on a small amount of optimisation in development mode.
opt-level = 1


[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
